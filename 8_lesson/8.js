/* 1. Для практикума из занятия 7 продумать, где можно применить замыкания.
Посидел и продумал */

/*  2.Не выполняя кода, ответить, что выведет браузер и почему:

if (!("a" in window)) {
  var a = 1;
}
alert(a);

Переменная а видна до условного цикла так как обьявленна через var, но ей еще не присвоенно значение.
"a" in window - вернет true,
но так как стоит инверсия мы не войдем в тело условного оператора и переменной а не будет присвоено значение.
И alert выведет Undefined.




var b = function a(x) {
  x && a(--x);
};
alert(a);

Будет ошибка, функция a у нас определенна внутри функционально выражения, и во вне не видна.




function a(x) {
  return x * 2;
}
var a;
alert(a);

Здесь уже функция а будет видна в области видимости window как функция.




function b(x, y, a) {
  arguments[2] = 10;
  alert(a);
}
b(1, 2, 3);

При вызове функции в аргумент а будет записано 3, но затем сразу же будет перезапсиано и выведено новое значени - 10.



function a() {
  alert(this);
}
a.call(null);

Незнаю, проверил, this будет ссылаться на window, хотелось бы знать почему, 
ведь передаем исполнение функции в контексте null.

*/

